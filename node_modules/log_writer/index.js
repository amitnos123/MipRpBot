module.exports = class log_writer {

	constructor(logDir) {
		if (logDir === '') {
			throw new Error('log_writer didn\'t get log directory path');
		}
		this.logDir = logDir;
	}

	logMessage(debugLvl, message) {
		const constants = require('consts');
		switch (debugLvl) {
			case 'debug':
				debugLvl = constants.LOG_DEBUG;
				break;
			case 'error':
				debugLvl = constants.LOG_ERROR;
				break;
			case 'start':
				debugLvl = constants.LOG_START;
				break;
			case 'end':
				debugLvl = constants.LOG_END;
				break;
			case 'load':
				debugLvl = constants.LOG_LOAD;
				break;
			default:
				debugLvl = constants.LOG_INFO;
				break;
		}

		const fs = require('fs');
		const path = require('path');

		const today = new Date();
		const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
		const time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();

		console.log(`[${date} ${time}]${debugLvl}:${message}`);
		fs.appendFileSync(`${this.logDir}\\log-${date}.txt`, `[${time}]${debugLvl}:${message}\n`);
	}

	logSplit() {
		const fs = require('fs');
		// const path = require('path');
		const constants = require('consts');

		const today = new Date();
		const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();

		console.log(constants.LOG_SPLIT);
		fs.appendFileSync(`${this.logDir}\\log-${date}.txt`, `${constants.LOG_SPLIT}\n`);
	}
};
